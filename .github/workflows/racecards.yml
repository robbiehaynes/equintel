# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Racecards Pipeline

on:
  schedule:
    - cron: '15 5 * * *'   # Runs every day at 05:15 UTC
  workflow_dispatch:        # Allows manual triggering as well

jobs:
  build:
    name: Build and Process Racecards
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Fetch racecards
        run: |
          echo "Fetching data from : $API_URL"
          python racecards/fetch.py
        env:
          API_URL: ${{ vars.API_URL }}
          API_USER: ${{ vars.API_USER }}
          API_PASS: ${{ secrets.API_PASS }}

      - name: Format racecards
        run: |
          echo "Formatting racecards..."
          mkdir output
          python racecards/format.py

      - name: Upload processed racecards as artifact
        uses: actions/upload-artifact@v4
        with:
          name: processed-racecards
          path: output/

  deploy:
    name: Upload Racecards
    runs-on: ubuntu-latest
    needs: build   # deploy job only runs if build succeeds
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Download processed racecards artifact
        uses: actions/download-artifact@v4
        with:
          name: processed-racecards
          path: output/

      - name: Upload racecards
        run: |
          echo "Uploading to : $SUPABASE_URL
          python racecards/upload.py
        env:
          SUPABASE_URL: ${{ vars.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}

