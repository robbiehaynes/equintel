name: Results Pipeline

on:
  schedule:
    - cron: '15 22 * * *'   # Runs every day at 22:15 UTC
  workflow_dispatch:        # Allows manual triggering as well

jobs:
  build:
    name: Build and Process Results
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Fetch results
        run: |
          echo "Fetching results from : $API_URL"
          python results/fetch.py
        env:
          API_URL: ${{ vars.API_URL }}
          API_USER: ${{ vars.API_USER }}
          API_PASS: ${{ secrets.API_PASS }}

      - name: Format results
        run: |
          echo "Formatting results..."
          python results/format.py

      - name: Upload processed results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: processed-results
          path: output/

  deploy:
    name: Upload Results
    runs-on: ubuntu-latest
    needs: build   # deploy job only runs if build succeeds
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.9
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Download processed results artifact
        uses: actions/download-artifact@v4
        with:
          name: processed-results
          path: output/

      - name: Upload results
        run: |
          echo "Uploading to : $SUPABASE_URL"
          python results/upload.py
        env:
          SUPABASE_URL: ${{ vars.SUPABASE_URL }}
          SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
